generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "prisma-zod-generator"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                   String                @id @default(cuid())
  name                 String?
  email                String?               @unique
  emailVerified        DateTime?
  image                String?
  accounts             Account[]
  sessions             Session[]
  materialQuantityLogs MaterialQuantityLog[]
  BattlepassLog        BattlepassLog[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Material {
  id                   Int                   @id @default(autoincrement())
  name                 String                @db.VarChar(255)
  namePlural           String?               @db.VarChar(255)
  imageLink            String?               @db.VarChar(255)
  materialQuantityLogs MaterialQuantityLog[]
}

model MaterialQuantityLog {
  id         Int      @id @default(autoincrement())
  quantity   Int
  loggedAt   DateTime @default(now())
  idMaterial Int
  material   Material @relation(fields: [idMaterial], references: [id])
  idUser     String
  user       User     @relation(fields: [idUser], references: [id])
}

model BattlepassLog {
  id                   Int      @id @default(autoincrement())
  xp                   Int
  currentLimitProgress Int
  loggedAt             DateTime @default(now())
  idUser               String
  user                 User     @relation(fields: [idUser], references: [id])
}
